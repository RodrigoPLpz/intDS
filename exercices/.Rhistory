# Exportamos el archivo en una variable dir
dirAdu <- "C:\\Users\\mecat\\Desktop\\adult"
# Leemos la base de datos
adult <- read.csv(paste(dirAdu,"adult2.csv", sep = "/"),stringsAsFactors = T)
str(adult)
#Transformar a tibble
adult <- as_tibble(adult)
#Filtrar hombres por columna de sexo y guardala en variable hombres
hombres <- filter(adult, sex==" Male")
hombres
#Selecciona solo las columnas age, educaction,native-country
adult2 <- select(adult,age,education, native.country)
adult2
#Ordena las observaciones por pais de forma ascendente
arrange(adult, native.country)
#Ordena las observaciones por edad de forma descedendente
arrange(adult,desc(age))
#Crea una nueva base que agrupe las observaciones por sexo y pais con una variable "count"
#que contenga la cantidad que hay por grupo
detach(package:plyr)
libray(dplyr)
by_sex_country <- group_by(age,adult,sex,native.country)
by_sex_country
by_sex_country <- group_by(age,adult,sex,native.country)
#Crea una nueva base que agrupe las observaciones por sexo y pais con una variable "count"
#que contenga la cantidad que hay por grupo
detach(package:plyr)
# Se limpia el espacio de trabajo  y ubicamos desde la raíz.
rm(list = ls())
setwd("~")
# Se instancian las paqueterías necesarias.
require(tidyverse)
require(nycflights13)
# Exportamos el archivo en una variable dir
dirAdu <- "C:\\Users\\mecat\\Desktop\\adult"
# Leemos la base de datos
adult <- read.csv(paste(dirAdu,"adult2.csv", sep = "/"),stringsAsFactors = T)
str(adult)
#Transformar a tibble
adult <- as_tibble(adult)
#Filtrar hombres por columna de sexo y guardala en variable hombres
hombres <- filter(adult, sex==" Male")
hombres
#Selecciona solo las columnas age, educaction,native-country
adult2 <- select(adult,age,education, native.country)
adult2
#Ordena las observaciones por pais de forma ascendente
arrange(adult, native.country)
#Ordena las observaciones por edad de forma descedendente
arrange(adult,desc(age))
#Crea una nueva base que agrupe las observaciones por sexo y pais con una variable "count"
#que contenga la cantidad que hay por grupo
detach(package:plyr)
libray(plyr)
by_sex_country <- group_by(age,adult,sex,native.country)
by_sex_country
summarise(by_sex_country,mean_age = mean(age, na.rm = TRUE),count=n())
#Crea una nueva base que agrupe las observaciones por sexo y pais con una variable "count"
#que contenga la cantidad que hay por grupo
detach(package:plyr)
libray(plyr)
# Se limpia el espacio de trabajo  y ubicamos desde la raíz.
rm(list = ls())
setwd("~")
# Se instancian las paqueterías necesarias.
require(tidyverse)
require(nycflights13)
# Exportamos el archivo en una variable dir
dirAdu <- "C:\\Users\\mecat\\Desktop\\adult"
# Leemos la base de datos
adult <- read.csv(paste(dirAdu,"adult2.csv", sep = "/"),stringsAsFactors = T)
str(adult)
#Transformar a tibble
adult <- as_tibble(adult)
#Filtrar hombres por columna de sexo y guardala en variable hombres
hombres <- filter(adult, sex==" Male")
hombres
#Selecciona solo las columnas age, educaction,native-country
adult2 <- select(adult,age,education, native.country)
adult2
#Ordena las observaciones por pais de forma ascendente
arrange(adult, native.country)
#Ordena las observaciones por edad de forma descedendente
arrange(adult,desc(age))
#Crea una nueva base que agrupe las observaciones por sexo y pais con una variable "count"
#que contenga la cantidad que hay por grupo
detach(package:plyr)
libray(plyr)
by_sex_country <- group_by(age,adult,sex,native.country)
by_sex_country
summarise(by_sex_country,mean_age = mean(age, na.rm = TRUE),count=n())
#Crea una nueva base que agrupe las observaciones por sexo y pais con una variable "count"
#que contenga la cantidad que hay por grupo
by_sex_country <- group_by(age,adult,sex,native.country)
by_sex_country
summarise(by_sex_country,mean_age = mean(age, na.rm = TRUE),count=n())
#Crea una nueva base que agrupe las observaciones por sexo y pais con una variable "count"
#que contenga la cantidad que hay por grupo
by_sex_country <- group_by(adult,sex,native.country)
by_sex_country
#Crea una nueva base que agrupe las observaciones por sexo y pais con una variable "count"
#que contenga la cantidad que hay por grupo
by_sex_country <- group_by(age,adult,sex,native.country)
#Crea una nueva base que agrupe las observaciones por sexo y pais con una variable "count"
#que contenga la cantidad que hay por grupo
by_sex_country <- group_by(adult,sex,native.country)
by_sex_country
summarise(by_sex_country,mean_age = mean(age, na.rm = TRUE),count=n())
summarise(by_sex_country,count=n())
#Crea una nueva base que agrupe las observaciones por sexo y pais con una variable "count"
#que contenga la cantidad que hay por grupo
by_sex_country <- group_by(sex,native.country)
by_sex_country
summarise(by_sex_country,count=n())
# Se limpia el espacio de trabajo  y ubicamos desde la raíz.
rm(list = ls())
setwd("~")
# Se instancian las paqueterías necesarias.
require(tidyverse)
require(nycflights13)
# Exportamos el archivo en una variable dir
dirAdu <- "C:\\Users\\mecat\\Desktop\\adult"
# Leemos la base de datos
adult <- read.csv(paste(dirAdu,"adult2.csv", sep = "/"),stringsAsFactors = T)
str(adult)
#Transformar a tibble
adult <- as_tibble(adult)
#Filtrar hombres por columna de sexo y guardala en variable hombres
hombres <- filter(adult, sex==" Male")
hombres
#Selecciona solo las columnas age, educaction,native-country
adult2 <- select(adult,age,education, native.country)
adult2
#Ordena las observaciones por pais de forma ascendente
arrange(adult, native.country)
#Ordena las observaciones por edad de forma descedendente
arrange(adult,desc(age))
#Crea una nueva base que agrupe las observaciones por sexo y pais con una variable "count"
#que contenga la cantidad que hay por grupo
by_sex_country <- group_by(sex,native.country)
by_sex_country
summarise(by_sex_country,count=n())
#Crea una nueva base que agrupe las observaciones por sexo y pais con una variable "count"
#que contenga la cantidad que hay por grupo
by_sex_country <- group_by(sex,native.country)
by_sex_country
summarise(by_sex_country,count=n())
#Crea una nueva base que agrupe las observaciones por sexo y pais con una variable "count"
#que contenga la cantidad que hay por grupo
by_sex_country <- group_by(sex,native.country)
by_sex_country
summarise(by_sex_country,count=n())
# Se limpia el espacio de trabajo  y ubicamos desde la raíz.
rm(list = ls())
setwd("~")
# Se instancian las paqueterías necesarias.
require(tidyverse)
require(nycflights13)
# Exportamos el archivo en una variable dir
dirAdu <- "C:\\Users\\mecat\\Desktop\\adult"
# Leemos la base de datos
adult <- read.csv(paste(dirAdu,"adult2.csv", sep = "/"),stringsAsFactors = T)
str(adult)
#Transformar a tibble
adult <- as_tibble(adult)
#Filtrar hombres por columna de sexo y guardala en variable hombres
hombres <- filter(adult, sex==" Male")
hombres
#Selecciona solo las columnas age, educaction,native-country
adult2 <- select(adult,age,education, native.country)
adult2
#Ordena las observaciones por pais de forma ascendente
arrange(adult, native.country)
#Ordena las observaciones por edad de forma descedendente
arrange(adult,desc(age))
#Crea una nueva base que agrupe las observaciones por sexo y pais con una variable "count"
#que contenga la cantidad que hay por grupo
by_sex_country <- group_by(sex,native.country)
by_sex_country
summarise(by_sex_country,count=n())
# Se instancian las paqueterías necesarias.
require(tidyverse)
require(nycflights13)
# Exportamos el archivo en una variable dir
dirAdu <- "C:\\Users\\mecat\\Desktop\\adult"
# Leemos la base de datos
adult <- read.csv(paste(dirAdu,"adult2.csv", sep = "/"),stringsAsFactors = T)
str(adult)
#Transformar a tibble
adult <- as_tibble(adult)
#Filtrar hombres por columna de sexo y guardala en variable hombres
hombres <- filter(adult, sex==" Male")
hombres
#Selecciona solo las columnas age, educaction,native-country
adult2 <- select(adult,age,education, native.country)
adult2
#Ordena las observaciones por pais de forma ascendente
arrange(adult, native.country)
#Ordena las observaciones por edad de forma descedendente
arrange(adult,desc(age))
#Crea una nueva base que agrupe las observaciones por sexo y pais con una variable "count"
#que contenga la cantidad que hay por grupo
by_sex_country <- group_by(sex,native.country)
#Crea una nueva base que agrupe las observaciones por sexo y pais con una variable "count"
#que contenga la cantidad que hay por grupo
by_sex_country <- group_by(sex, native.country)
#Crea una nueva base que agrupe las observaciones por sexo y pais con una variable "count"
#que contenga la cantidad que hay por grupo
by_sex_country <- group_by(age, native.country)
#Crea una nueva base que agrupe las observaciones por sexo y pais con una variable "count"
#que contenga la cantidad que hay por grupo
by_sex_country <- group_by(adult, sex, native.country)
by_sex_country
summarise(by_sex_country,count=n())
#Leer la base de datos
fifa2 <- read.csv("data.csv", stringsAsFactors = FALSE)
#Cambia la ruta hacia la carpeta descktop
setwd("~/Documentos/devf/intDS")
#Leer la base de datos
fifa2 <- read.csv("data.csv", stringsAsFactors = FALSE)
fifa2
#Cambia la ruta hacia la carpeta descktop
setwd("E:\RodriGo\Cursos\devf\intDS\exercices")
#Cambia la ruta hacia la carpeta desctop
setwd("~/Documentos/devf/intDS")
#Cambia la ruta hacia la carpeta descktop
setwd("~")
#Leer la base de datos
fifa2 <- read.csv("data.csv", stringsAsFactors = FALSE)
rm(list = ls())
setwd("~")
dirt2 <- "E:\\RodriGo\\Cursos\\devf\\intDS\\exercices"
fifa2 <- read.csv(paste(dirt2,"data.csv", sep = "/"),stringsAsFactors = T)
fifa2 <- read.csv(paste(dirt2,"data.csv", sep = "/"),stringsAsFactors = F)
dirt2 <- "E:\\RodriGo\\Cursos\\devf\\intDS\\exercices"
fifa2 <- read.csv(paste(dirt2,"data.csv", sep = "/"),stringsAsFactors = F)
rm(list = ls())
setwd("~")
dirt2 <- "E:\\RodriGo\\Cursos\\devf\\intDS\\exercices"
fifa2 <- read.csv(paste(dirt2,"data.csv", sep = "/") ,stringsAsFactors = F)
fifa2 <- read.csv(paste(dirt2,"data.csv", sep = " ") ,stringsAsFactors = F)
fifa2 <- read.csv(paste(dirt2,"data.csv") ,stringsAsFactors = F)
fifa2 <- read.csv(paste(dirt2,"data.csv") ,stringsAsFactors = F)
dirt2 <- "E:\\RodriGo\\Cursos\\devf\\intDS\\exercices"
fifa2 <- read.csv(paste(dirt2,"data.csv") ,stringsAsFactors = F)
fifa2 <- read.csv(paste(dirt2,"data.csv", sep = " ") ,stringsAsFactors = F)
fifa2 <- read.csv(paste(dirt2,"data.csv", sep = "/") ,stringsAsFactors = F)
fifa2 <- read.csv(paste(dirt2,"data.csv", sep = "/") , stringsAsFactors = F)
rm(list = ls())
setwd("~")
dirt2 <- "E:\\RodriGo\\Cursos\\devf\\intDS\\exercices"
fifa2 <- read.csv(paste(dirt2,"data.csv", sep = "/") , stringsAsFactors = F)
setwd("~/E:\\RodriGo\\Cursos\\devf\\intDS\\exercices")
setwd("E:\\RodriGo\\Cursos\\devf\\intDS\\exercices")
fifa2 <- read.csv("data.csv",stringsAsFactors = FALSE)
fifa2 <- read.csv("data.csv", stringsAsFactors = FALSE)
fifa2
setwd("E:\\RodriGo\\Cursos\\devf\\intDS\\exercices")
fifa2 <- read.csv("data.csv", stringsAsFactors = FALSE)
fifa2
setwd("E:\\RodriGo\\Cursos\\devf\\intDS\\exercices")
fifa2 <- read.csv("data.csv", stringsAsFactors = FALSE)
fifa2
#cantidad de filas
nrow(fifa2)
#18207
#cantidad de columnas
ncol(fifa2)
#89
#str(fifa)
fifa2 <- as_tibble(fifa2)
#Crea un segundo data frame con las siguientes columnas "ID","Name","Age","Photo","Jersey.Nu
soccer = fifa2[c("ID","Name","Age","Photo","Jersey.Number")]
soccer
soccer <- select(fifa2,"ID","Name","Age","Photo","Jersey.Number")
soccer
#Crea un segundo data frame con las siguientes columnas "ID","Name","Age","Photo","Jersey.Nu
soccer <- select(fifa2,"ID","Name","Age","Photo","Jersey.Number")
soccer
#-----------------------------------------------------------------------
#Crea una nueva columna que indique en quÃ© quintil de la columna Wage,
#se encuentra. Marca los quintiles como q1, q2, q3,q4,q5
#fifa$Jersey.Number  o fifa[,"Jersey.Number] o fifa[,<indice de la col>]
#----------------------------------------------------------------------
#Jugadores con Overall > 90
filter(fifa2, overall > 90)
#-----------------------------------------------------------------------
#Crea una nueva columna que indique en quÃ© quintil de la columna Wage,
#se encuentra. Marca los quintiles como q1, q2, q3,q4,q5
#fifa$Jersey.Number  o fifa[,"Jersey.Number] o fifa[,<indice de la col>]
#----------------------------------------------------------------------
#Jugadores con Overall > 90
select(fifa2,overall)
#-----------------------------------------------------------------------
#Crea una nueva columna que indique en quÃ© quintil de la columna Wage,
#se encuentra. Marca los quintiles como q1, q2, q3,q4,q5
#fifa$Jersey.Number  o fifa[,"Jersey.Number] o fifa[,<indice de la col>]
#----------------------------------------------------------------------
#Jugadores con Overall > 90
select(fifa2,Overall)
filter(fifa2, O > 90)
filter(fifa2, Overall > 90)
setwd("E:\\RodriGo\\Cursos\\devf\\intDS\\exercices")
fifa2 <- read.csv("data.csv", stringsAsFactors = FALSE)
fifa2
#cantidad de filas
nrow(fifa2)
#18207
#cantidad de columnas
ncol(fifa2)
#89
#str(fifa)
#conversion a tibble
fifa2 <- as_tibble(fifa2)
#Crea un segundo data frame con las siguientes columnas "ID","Name","Age","Photo","Jersey.Nu
soccer <- select(fifa2,"ID","Name","Age","Photo","Jersey.Number")
soccer
#-----------------------------------------------------------------------
#Crea una nueva columna que indique en quÃ© quintil de la columna Wage,
#se encuentra. Marca los quintiles como q1, q2, q3,q4,q5
#fifa$Jersey.Number  o fifa[,"Jersey.Number] o fifa[,<indice de la col>]
#----------------------------------------------------------------------
#Jugadores con Overall > 90
select(fifa2,Overall)
filter(fifa2, Overall > 90)
#Jugadores menores de 30 aÃ±os y ganan mÃ¡s de 80k euros
soc_age_wag <- group_by(Age,Wage)
soc_age_wag
#Jugadores menores de 30 aÃ±os y ganan mÃ¡s de 80k euros
soc_age_wag <- group_by(fifa2.Age,Wage)
#Jugadores menores de 30 aÃ±os y ganan mÃ¡s de 80k euros
soc_age_wag <- group_by(fifa2,Age,Wage)
soc_age_wag
#Jugadores menores de 30 aÃ±os y ganan mÃ¡s de 80k euros
soc_age_wag <- group_by(fifa2,Name,Age,Wage)
soc_age_wag
#Jugadores menores de 30 aÃ±os y ganan mÃ¡s de 80k euros
select(fifa2, Age, Wage)
#Jugadores menores de 30 aÃ±os y ganan mÃ¡s de 80k euros
filter(fifa2,Age < 30)
#Jugadores menores de 30 aÃ±os y ganan mÃ¡s de 80k euros
filter(fifa2,Age < 30)
select(fifa2,Wage)
select(fifa2,ends_with("K"))
select(fifa2,ends_with("K"))
k <- select(fifa2,ends_with("K"))
k
#Jugadores menores de 30 aÃ±os y ganan mÃ¡s de 80k euros
filter(fifa2,Age < 30 & Wage =="â‚¬355K")
#Jugadores menores de 30 aÃ±os y ganan mÃ¡s de 80k euros
filter(fifa2,Age < 30 & Wage =="â‚¬80M")
#Jugadores menores de 30 aÃ±os y ganan mÃ¡s de 80k euros
filter(fifa2,Age < 30 & Wage =="â‚¬80M")
#Valor mÃ¡ximo de valor de mercado
filter(fifa2,value)
#Valor mÃ¡ximo de valor de mercado
filter(fifa2,Value)
#Valor mÃ¡ximo de valor de mercado
select(fifa2,Value)
arrange(fifa2, desc(Value))
arrange(fifa2, Value)
#Valor mÃ¡ximo de valor de mercado
select(fifa2,Value)
group_value <- group_by(fifa2,Value)
group_value
summarise(group_value)
group_value <- group_by(fifa2,desc(Value))
group_value
summarise(group_value)
group_value <- group_by(fifa2,desc(Value))
group_value
summarise(group_value)
group_value <- group_by(fifa2,Value)
group_value
#----------------------------------------------------------------------
#Jugadores del Manchester City
group_spMc <- group_by(fifa2,Club)
group_spMc
#----------------------------------------------------------------------
#Jugadores del Manchester City
group_spMc <- group_by(fifa2,=="Manchester City")
#----------------------------------------------------------------------
#Jugadores del Manchester City
group_spMc <- group_by(fifa2,Club=="Manchester City")
group_spMc
#----------------------------------------------------------------------
#Jugadores del Manchester City
group_spMc <- group_by(fifa2,Club)
group_spMc
#----------------------------------------------------------------------
#Jugadores del Manchester City
group_spMc <- group_by(fifa2,Club =="Manchester City")
group_spMc
summarise(group_spMc,count=n())
#----------------------------------------------------------------------
#Jugadores del Manchester City
filter(fifa2,Club =="Manchester City")
#----------------------------------------------------------------------
#Jugadores del Manchester City
group_spMc <- filter(fifa2,Club =="Manchester City")
summarise(group_spMc,count=n())
#30 jugadores
spMC = fifa[fifa2$Club =="Manchester City",]
#30 jugadores
spMC = fifa2[fifa2$Club =="Manchester City",]
nrow(spMC)
#30 jugadores
#Portero con los mejores reflejos "GKReflexes"
filter(fifa2,Position == "G")
#30 jugadores
#Portero con los mejores reflejos "GKReflexes"
filter(fifa2,Position == "GK")
#30 jugadores
#Portero con los mejores reflejos "GKReflexes"
arrange(fifa2, GKReflexes)
#30 jugadores
#Portero con los mejores reflejos "GKReflexes"
select(fifa2,Name,Position)
#30 jugadores
#Portero con los mejores reflejos "GKReflexes"
select(fifa2,Name,Position=="Gk")
#30 jugadores
#Portero con los mejores reflejos "GKReflexes"
select(fifa2,Name,Position=="GK")
#30 jugadores
#Portero con los mejores reflejos "GKReflexes"
filter(fifa2,Name,Position =="GK")
#30 jugadores
#Portero con los mejores reflejos "GKReflexes"
filter(fifa2,Name,Position =="GK")
#30 jugadores
#Portero con los mejores reflejos "GKReflexes"
filter(fifa2,Name & Position =="GK")
#30 jugadores
#Portero con los mejores reflejos "GKReflexes"
filter(fifa2, Position =="GK")
#30 jugadores
#Portero con los mejores reflejos "GKReflexes"
filter(fifa2, Position =="GK" & GKReflexes == 94 )
#30 jugadores
#Portero con los mejores reflejos "GKReflexes"
filter(fifa2, Position =="GK" & GKReflexes == 94)
#30 jugadores
#Portero con los mejores reflejos "GKReflexes"
filter(fifa2, Position =="GK" & GKReflexes > 94)
#30 jugadores
#Portero con los mejores reflejos "GKReflexes"
filter(fifa2, Position =="GK" & GKReflexes > 94)
#30 jugadores
#Portero con los mejores reflejos "GKReflexes"
portero <- group_by(fifa2,Name,Position)
summarise(portero,GKReflexes > 94)
summarise(portero, GKReflexes == 94)
summarise(portero)
summarise(portero,Position=="GK")
summarise(portero, Position =="GK")
#30 jugadores
#Portero con los mejores reflejos "GKReflexes"
portero <- group_by(fifa2,Name,Position)
#30 jugadores
#Portero con los mejores reflejos "GKReflexes"
portero <- group_by(fifa2,Name,Position=="GK")
portero
#30 jugadores
#Portero con los mejores reflejos "GKReflexes"
portero <- group_by(fifa2,Name,Position=="GK")
portero
arrange(portero,GKReflexes)
arrange(portero,desc(GKReflexes))
#30 jugadores
#Portero con los mejores reflejos "GKReflexes"
portero <- group_by(fifa2,Name,Position=="GK")
arrange(portero,desc(GKReflexes))
arrange(portero,desc(GKReflexes,Name)
arrange(portero,desc(GKReflexes),Name)
#30 jugadores
#Portero con los mejores reflejos "GKReflexes"
portero <- group_by(fifa2,Name,Position=="GK")
arrange(portero,desc(GKReflexes),Name)
select(portero,GKReflexes)
select(portero,GKReflexes,Name=="De Gea")
filter(portero,GKReflexes,Name=="De Gea")
filter(fifa2,GKReflexes,Name=="De Gea")
filter(fifa2,Name=="De Gea")
filter(fifa2,Name=="De Gea",GKReflexes)
filter(fifa2,Name, GKReflexes == 94)
filter(fifa2,GKReflexes == 94)
filter(fifa2,GKReflexes == 95)
filter(fifa2,GKReflexes == 96)
filter(fifa2,GKReflexes == 100)
filter(fifa2,GKReflexes == 94)
filter(fifa2,GKReflexes >90)
arrange(portero,desc(GKReflexes),Name)
arrange(portero,GKReflexes)
#30 jugadores
#Portero con los mejores reflejos "GKReflexes"
portero <- group_by(fifa2,Name,Position=="GK")
portero
filter(portero,GKReflexes >90)
arrange(portero, GKReflexes)
arrange(portero, desc(GKReflexes))
filter(portero,GKReflexes >90)
filter(portero,GKReflexes > 90)
arrange(portero, desc(GKReflexes))
filter(portero,GKReflexes > 90)
portero2 <- filter(portero,GKReflexes > 90)
arrange(portero2, desc(GKReflexes))
filter(fifa2,Position=="GK"& GKReflexes == 94)
filter(fifa2,Position=="GK"& GKReflexes == 95)
filter(fifa2,Position=="GK"& GKReflexes == 96)
filter(fifa2,Position=="GK"& GKReflexes == 97)
filter(fifa2,Position=="GK"& GKReflexes >94)
